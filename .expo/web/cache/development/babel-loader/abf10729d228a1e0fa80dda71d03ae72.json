{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alice\\\\Desktop\\\\2021S2\\\\Profolio\\\\nativeProject\\\\Stock-price-app\\\\stockPrice\\\\components\\\\TableRow.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { DataTable } from \"react-native-paper\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Axios from \"axios\";\nexport default function TableRow(_ref) {\n  var stock = _ref.stock;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var baseUrl = \"https://www.asx.com.au/asx/1/share/\" + stock.code;\n\n  var shareData = function shareData() {\n    Axios.get(baseUrl).then(function (response) {\n      setData(response.data);\n    }).catch(function (error) {\n      alert(\"not found\");\n    });\n  };\n\n  useEffect(function () {\n    shareData();\n  }, []);\n  var earning = ((parseInt(data.last_price) - stock.avgPrice) / stock.avgPrice * 100).toFixed(2);\n  return React.createElement(React.Fragment, null, React.createElement(DataTable.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, React.createElement(DataTable.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, stock.code), React.createElement(DataTable.Cell, {\n    numeric: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, stock.avgPrice), React.createElement(DataTable.Cell, {\n    numeric: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: data === \"\" ? null : {\n      color: earning >= 0 ? \"green\" : \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, earning, \"%\")), React.createElement(DataTable.Cell, {\n    numeric: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, data.last_price), React.createElement(DataTable.Cell, {\n    numeric: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: data === \"\" ? null : {\n      color: data.change_in_percent.slice(0, -1) >= 0 ? \"green\" : \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, data.change_in_percent))));\n}","map":{"version":3,"sources":["C:/Users/Alice/Desktop/2021S2/Profolio/nativeProject/Stock-price-app/stockPrice/components/TableRow.js"],"names":["React","useState","useEffect","DataTable","Axios","TableRow","stock","data","setData","baseUrl","code","shareData","get","then","response","catch","error","alert","earning","parseInt","last_price","avgPrice","toFixed","color","change_in_percent","slice"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,oBAA1B;;;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,eAAe,SAASC,QAAT,OAA4B;AAAA,MAARC,KAAQ,QAARA,KAAQ;;AACvC,kBAAwBL,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOM,IAAP;AAAA,MAAaC,OAAb;;AACA,MAAMC,OAAO,2CAAyCH,KAAK,CAACI,IAA5D;;AAEC,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBP,IAAAA,KAAK,CAACQ,GAAN,CAAUH,OAAV,EACKI,IADL,CACU,UAACC,QAAD,EAAc;AACpBN,MAAAA,OAAO,CAACM,QAAQ,CAACP,IAAV,CAAP;AACD,KAHH,EAIGQ,KAJH,CAIS,UAACC,KAAD,EAAW;AAChBC,MAAAA,KAAK,CAAC,WAAD,CAAL;AACD,KANH;AAOD,GARD;;AAUFf,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,SAAS;AACV,GAFQ,EAEP,EAFO,CAAT;AAID,MAAIO,OAAO,GAAG,CAAE,CAACC,QAAQ,CAACZ,IAAI,CAACa,UAAN,CAAR,GAA4Bd,KAAK,CAACe,QAAnC,IAA+Cf,KAAK,CAACe,QAAtD,GAAkE,GAAnE,EAAwEC,OAAxE,CAAgF,CAAhF,CAAd;AAEA,SACE,0CACE,oBAAC,SAAD,CAAW,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBhB,KAAK,CAACI,IAAvB,CADF,EAEE,oBAAC,SAAD,CAAW,IAAX;AAAgB,IAAA,OAAO,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBJ,KAAK,CAACe,QAA/B,CAFF,EAGE,oBAAC,SAAD,CAAW,IAAX;AAAgB,IAAA,OAAO,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAEd,IAAI,KAAK,EAAT,GAAa,IAAb,GAAmB;AAACgB,MAAAA,KAAK,EAACL,OAAO,IAAI,CAAX,GAAc,OAAd,GAAuB;AAA9B,KAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGA,OAHH,MADF,CAHF,EAUE,oBAAC,SAAD,CAAW,IAAX;AAAgB,IAAA,OAAO,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBX,IAAI,CAACa,UAA9B,CAVF,EAWE,oBAAC,SAAD,CAAW,IAAX;AAAgB,IAAA,OAAO,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,KAAK,EACHb,IAAI,KAAK,EAAT,GACI,IADJ,GAEI;AACEgB,MAAAA,KAAK,EACHhB,IAAI,CAACiB,iBAAL,CAAuBC,KAAvB,CAA6B,CAA7B,EAAgC,CAAC,CAAjC,KAAuC,CAAvC,GACI,OADJ,GAEI;AAJR,KAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYGlB,IAAI,CAACiB,iBAZR,CADF,CAXF,CADF,CADF;AAgCD","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { DataTable } from \"react-native-paper\";\r\nimport { Text, StyleSheet } from \"react-native\";\r\nimport Axios from \"axios\";\r\n\r\n\r\nexport default function TableRow({ stock}) {\r\n    const [data, setData] = useState(\"\");\r\n    const baseUrl = `https://www.asx.com.au/asx/1/share/${stock.code}`;\r\n\r\n     const shareData = () => {\r\n       Axios.get(baseUrl)\r\n           .then((response) => {\r\n           setData(response.data);\r\n         })\r\n         .catch((error) => {\r\n           alert(\"not found\");\r\n         });\r\n     };\r\n\r\n   useEffect(() => {\r\n     shareData();\r\n   },[]);\r\n  \r\n  let earning = (((parseInt(data.last_price) - stock.avgPrice) / stock.avgPrice) * 100).toFixed(2)\r\n  //console.log(data.last_price, stock.avgPrice);\r\n  return (\r\n    <>\r\n      <DataTable.Row>\r\n        <DataTable.Cell>{stock.code}</DataTable.Cell>\r\n        <DataTable.Cell numeric>{stock.avgPrice}</DataTable.Cell>\r\n        <DataTable.Cell numeric>\r\n          <Text\r\n            style={data === \"\"? null: {color:earning >= 0? \"green\": \"red\",}}\r\n          >\r\n            {earning}%\r\n          </Text>\r\n        </DataTable.Cell>\r\n        <DataTable.Cell numeric>{data.last_price}</DataTable.Cell>\r\n        <DataTable.Cell numeric>\r\n          <Text\r\n            style={\r\n              data === \"\"\r\n                ? null\r\n                : {\r\n                    color:\r\n                      data.change_in_percent.slice(0, -1) >= 0\r\n                        ? \"green\"\r\n                        : \"red\",\r\n                  }\r\n            }\r\n          >\r\n            {data.change_in_percent}\r\n          </Text>\r\n        </DataTable.Cell>\r\n      </DataTable.Row>\r\n      </>\r\n    );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}