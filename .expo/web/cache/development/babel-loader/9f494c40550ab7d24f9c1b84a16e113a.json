{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alice\\\\Desktop\\\\2021S2\\\\Profolio\\\\nativeProject\\\\Stock-price-app\\\\stockPrice\\\\pages\\\\Home.js\";\nimport React, { useState, useEffect, useCallback, useMemo, memo } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { FAB } from \"react-native-paper\";\nimport Item from \"../components/Item\";\nimport Dialogue from \"../components/Dialogue\";\nimport AddButton from \"../components/AddButton\";\nimport Swipeable from \"react-native-gesture-handler/Swipeable\";\nimport { AntDesign } from \"@expo/vector-icons\";\nexport default function Home() {\n  var _this = this;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      refreshing = _useState2[0],\n      setRefreshing = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      update = _useState4[0],\n      setUpdate = _useState4[1];\n\n  var _useState5 = useState([\"QAN\", \"MP1\", \"A2M\", \"VAS\", \"RIO\", \"VTS\"]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      codeList = _useState6[0],\n      setCodeList = _useState6[1];\n\n  codeList.sort(function (a, b) {\n    return a.localeCompare(b);\n  });\n  var onRefresh = useCallback(function () {\n    setRefreshing(true);\n    setUpdate(!update);\n    setRefreshing(false);\n  }, [refreshing]);\n\n  var handleDelete = function handleDelete(key) {\n    setCodeList(codeList.filter(function (stock) {\n      if (stock !== key) {\n        return stock;\n      }\n    }));\n  };\n\n  var loadData = function loadData(stock) {\n    if (update) {\n      return React.createElement(Item, {\n        key: stock,\n        code: stock,\n        isUpdate: update,\n        test: refreshing,\n        handleDelete: handleDelete,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      });\n    } else {\n      return React.createElement(Item, {\n        key: stock,\n        code: stock,\n        handleDelete: handleDelete,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 14\n        }\n      });\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: onRefresh,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, codeList.map(function (stock) {\n    {\n      return loadData(stock);\n    }\n  })), React.createElement(AddButton, {\n    setCodeList: setCodeList,\n    codeList: codeList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }));\n}\nvar sytles = StyleSheet.create({\n  rightActions: {\n    backgroundColor: \"#a62c2a\",\n    justifyContent: \"center\",\n    flex: 0.15\n  },\n  actionText: {\n    color: \"#fff\",\n    fontWeight: \"600\",\n    padding: 6,\n    marginLeft: 9,\n    backgroundColor: \"#a62c2a\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Alice/Desktop/2021S2/Profolio/nativeProject/Stock-price-app/stockPrice/pages/Home.js"],"names":["React","useState","useEffect","useCallback","useMemo","memo","AsyncStorage","FAB","Item","Dialogue","AddButton","Swipeable","AntDesign","Home","refreshing","setRefreshing","update","setUpdate","codeList","setCodeList","sort","a","b","localeCompare","onRefresh","handleDelete","key","filter","stock","loadData","map","sytles","StyleSheet","create","rightActions","backgroundColor","justifyContent","flex","actionText","color","fontWeight","padding","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useMemo, memo } from \"react\";\r\nimport {\r\n  View,\r\n  ScrollView,\r\n  StyleSheet,\r\n  RefreshControl,\r\n  Text,\r\n  Button,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { FAB } from \"react-native-paper\";\r\nimport Item from \"../components/Item\";\r\nimport Dialogue from \"../components/Dialogue\";\r\nimport AddButton from \"../components/AddButton\";\r\nimport Swipeable from \"react-native-gesture-handler/Swipeable\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\n\r\nexport default function Home() {\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [update, setUpdate] = useState(false);\r\n  const [codeList, setCodeList] = useState([\r\n    \"QAN\",\r\n    \"MP1\",\r\n    \"A2M\",\r\n    \"VAS\",\r\n    \"RIO\",\r\n    \"VTS\",\r\n  ]);\r\n\r\n  // https://www.codegrepper.com/code-examples/javascript/react+sort+array+alphabetically\r\n  codeList.sort(function (a, b) {\r\n    return a.localeCompare(b); //using String.prototype.localCompare()\r\n  });\r\n\r\n  const onRefresh = useCallback(() => {\r\n    setRefreshing(true);\r\n    setUpdate(!update);\r\n    setRefreshing(false);\r\n  }, [refreshing]);\r\n\r\n  const handleDelete = (key) => {\r\n    setCodeList(\r\n      codeList.filter((stock) => {\r\n        if (stock !== key) {\r\n          return stock;\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  const loadData = (stock) => {\r\n    if (update) {\r\n      return (\r\n        <Item key={stock} code={stock} isUpdate={update} test={refreshing} handleDelete={handleDelete}/>\r\n      );\r\n    } else {\r\n      return <Item key={stock} code={stock} handleDelete= {handleDelete}/>\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ScrollView\r\n        showsVerticalScrollIndicator={false}\r\n        refreshControl={\r\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\r\n        }\r\n      >\r\n        {codeList.map((stock) => {\r\n          {\r\n            return loadData(stock);\r\n          }\r\n        })}\r\n      </ScrollView>\r\n      <AddButton setCodeList={setCodeList} codeList={codeList} />\r\n    </>\r\n  );\r\n}\r\n\r\nconst sytles = StyleSheet.create({\r\n  rightActions: {\r\n    backgroundColor: \"#a62c2a\",\r\n    justifyContent: \"center\",\r\n    flex:0.15\r\n  },\r\n  actionText: {\r\n    color: \"#fff\",\r\n    fontWeight: \"600\",\r\n    padding: 6,\r\n    marginLeft:9,\r\n    backgroundColor: \"#a62c2a\",\r\n  },\r\n});\r\n\r\n// https://geekscoders.com/courses/react-native/lessons/react-native-floating-action-button/\r\n"]},"metadata":{},"sourceType":"module"}